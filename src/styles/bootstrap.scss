$sides: (
  t:      top,
  r:      right,
  b:      bottom,
  l:      left,
  empty:  empty
);

/* stylelint-disable */
@function _process-counter($i, $step-threshold-map) {
  $prev-threshold: 0;

  @each $step, $threshold in $step-threshold-map {
    @if ($i >= $prev-threshold and $i < $threshold) {
      $i: $i + $step;

      @return $i;
    }

    $prev-threshold: $threshold;
  }

  // should include max $threshold value but not dive into infinite loop. Thus +1 is used
  @return if($i < $prev-threshold, $prev-threshold, $prev-threshold + 1) ;
}

// Creates classes with .z-index-1 format
// We increment step by 1 until threshold is reached that we increment by $step
// Loop ends when $limit is reached
@mixin z-index($config) {
  $i: 0;
  $class-name: map_get($config, class-name);
  $step-threshold-map: map_get($config, step-threshold-map);
  $limit: map_get($config, limit);

  @while ($i <= $limit) {
    .#{$class-name}-#{$i} {
      z-index: $i;
    }

    $i: _process-counter($i, $step-threshold-map);
  }
}


@mixin borders($config) {
  $class-name: map_get($config, class-name);
  $thickness: if(map_get($config, thickness) != null, map_get($config, thickness), 1px);
  $color: map_get($config, color);
  $radius: map_get($config, radius);
  $border: #{$thickness} solid #{$color};

  .#{$class-name}-none {
    border: 0;
  }

  .#{$class-name}-rounded {
    border-radius: 50%;
  }

  .#{$class-name}-radius {
    border-radius: $radius;
  }

  @each $key, $value in $sides {
    @if ($key != empty) {
      .#{$class-name}-#{$key} {
        border-#{$value}: $border;
      }
    } @else {
      .#{$class-name} {
        border: $border;
      }
    }
  }
}

@mixin indents($config) {
  $mixin-class-name: map_get($config, class-name);
  $mixin-property-name: map_get($config, property-name);
  $limit: map_get($config, limit);
  $step-threshold-map: map_get($config, step-threshold-map);

  @each $key, $value in $sides {
    $i: 1;

    @while ($i <= $limit) {
      $class-name: '';
      $prop-name: '';
      $prop-value: '';

      @if ($key != empty) {
        $class-name: #{$mixin-class-name}-#{$key}-#{$i};
        $prop-name: #{$mixin-property-name}-#{$value};
        $prop-value: $i;
      } @else {
        $class-name: #{$mixin-class-name}-#{$i};
        $prop-name: $mixin-property-name;
        $prop-value: $i;
      }

      // positive
      .#{$class-name} {
        #{$prop-name}: #{$prop-value}px;
      }

      // negative
      // Don't construct negative values for padding
      @if ($prop-name != padding) {
        $class-name: #{$mixin-class-name}-#{$key}-n-#{$i};
        .#{$class-name} {
          #{$prop-name}: -#{$prop-value}px;
        }
      }

      @if ($key != empty) {
        .#{$mixin-class-name}-#{$key}-none {
          #{$mixin-property-name}-#{$value}: 0;
        }
      }

      $i: _process-counter($i, $step-threshold-map);
    }
  }

  .#{$mixin-class-name}-none {
    #{$mixin-property-name}: 0 !important;
  }
}

@mixin bootstrap($config) {
  $z-index-config: map_get($config, z-index);
  $borders-config: map_get($config, border);
  $indents-config: map_get($config, indents);

  @include z-index($z-index-config);
  @include borders($borders-config);

  @each $class-name, $property-name in map_get($indents-config, config) {
    @include indents((
      class-name: $class-name,
      property-name: $property-name,
      limit: map_get($indents-config, limit),
      step-threshold-map: map_get($indents-config, step-threshold-map)
    ));
  }
}
/* stylelint-enable */
