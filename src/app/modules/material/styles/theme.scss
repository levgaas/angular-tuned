@import '../../../../../node_modules/@angular/material/theming';
@import 'colors';

// Background palette for light themes.
$app-light-theme-background: (
  status-bar:               map_get($mat-grey, 300),
  app-bar:                  map_get($mat-grey, 100),
  background:               map_get($mat-grey, 50),
  hover:                    rgba(black, 0.04),
  card:                     white,
  dialog:                   white,
  disabled-button:          $black-12-opacity,
  raised-button:            white,
  focused-button:           $black-6-opacity,
  selected-button:          map_get($mat-grey, 300),
  selected-disabled-button: map_get($mat-grey, 400),
  disabled-button-toggle:   map_get($mat-grey, 200),
  unselected-chip:          map_get($mat-grey, 300),
  disabled-list-option:     map_get($mat-grey, 200),
);

// Foreground palette for light themes.
$app-light-theme-foreground: (
  base:              black,
  divider:           $black-12-opacity,
  dividers:          $black-12-opacity,
  disabled:          rgba(black, 0.38),
  disabled-button:   rgba(black, 0.38),
  disabled-text:     rgba(black, 0.38),
  hint-text:         rgba(black, 0.38),
  secondary-text:    rgba(black, 0.54),
  icon:              rgba(black, 0.54),
  icons:             rgba(black, 0.54),
  text:              rgba(black, 0.87),
  slider-min:        rgba(black, 0.87),
  slider-off:        rgba(black, 0.26),
  slider-off-active: rgba(black, 0.38),
);

// Background palette for dark themes.
$app-dark-theme-background: (
  status-bar:               black,
  app-bar:                  map_get($mat-grey, 900),
  background:               #303030,
  hover:                    rgba(white, 0.04),
  card:                     map_get($mat-grey, 800),
  dialog:                   map_get($mat-grey, 800),
  disabled-button:          $white-12-opacity,
  raised-button:            map-get($mat-grey, 800),
  focused-button:           $white-6-opacity,
  selected-button:          map_get($mat-grey, 900),
  selected-disabled-button: map_get($mat-grey, 800),
  disabled-button-toggle:   black,
  unselected-chip:          map_get($mat-grey, 700),
  disabled-list-option:     black,
);

// Foreground palette for dark themes.
$app-dark-theme-foreground: (
  base:              white,
  divider:           $white-12-opacity,
  dividers:          $white-12-opacity,
  disabled:          rgba(white, 0.3),
  disabled-button:   rgba(white, 0.3),
  disabled-text:     rgba(white, 0.3),
  hint-text:         rgba(white, 0.3),
  secondary-text:    rgba(white, 0.7),
  icon:              white,
  icons:             white,
  text:              white,
  slider-min:        white,
  slider-off:        rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);

// Creates a container object for a light theme to be given to individual component theme mixins.
@function app-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: $app-light-theme-foreground,
    background: $app-light-theme-background,
  );
}

// Creates a container object for a light theme to be given to individual component theme mixins.
@function app-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: $app-dark-theme-foreground,
    background: $app-dark-theme-background,
  );
}

$foreground-shorten-names-map: (
  default: 'text',
  secondary: 'secondary-text',
  disabled: 'disabled-text',
  icon: 'icon',
  hint: 'hint'
);

@mixin foreground-theme($config) {
  $suffix: map_get($config, suffix) or '';
  $class-names: map_get($config, class-names);
  $theme: map_get($config, theme);

  $text-class-name: map_get($class-names, text);

  @each $shorten-prop-name, $prop-name in $foreground-shorten-names-map {
    .#{$text-class-name}-#{$suffix}#{$shorten-prop-name} {
      color: map_get($theme, $prop-name);
    }
  }
}

@mixin opacity-theme($config) {
  $suffix: map_get($config, suffix) or '';
  $class-names: map_get($config, class-names);
  $theme: map_get($config, theme);

  $text-class-name: map_get($class-names, text);
  $opacity-class-name: map_get($class-names, opacity);

  @each $shorten-prop-name, $prop-name in $foreground-shorten-names-map {
    @if ($suffix != null) {
      .#{$opacity-class-name}-#{$text-class-name}-#{$suffix}#{$shorten-prop-name} {
        opacity: map_get($theme, $prop-name);
      }
    }
  }
}

@mixin background-theme($config) {
  $class-names: map_get($config, class-names);
  $theme: map_get($config, theme);

  $background-class-name: map_get($class-names, background);

  @each $color-name, $color in $theme {
    .#{$background-class-name}-#{$color-name} {
      background: $color;
    }
  }
}

@mixin app-material-theme($config) {
  @include background-theme(map_merge($config, ( theme: $app-light-theme-background)));
  @include foreground-theme(map_merge($config, ( theme: $app-light-theme-foreground)));
  @include foreground-theme(map_merge($config, ( theme: $app-dark-theme-foreground)));
  @include opacity-theme(map_merge($config, ( theme: $app-light-theme-foreground)));
  @include opacity-theme(map_merge($config, ( theme: $app-dark-theme-foreground)));
}
