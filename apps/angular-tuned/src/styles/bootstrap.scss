$sides: (
  t:      top,
  r:      right,
  b:      bottom,
  l:      left,
  empty:  empty
);

/* stylelint-disable */
@function _process-counter($i, $step-threshold-map) {
  $prev-threshold: 0;

  @each $step, $threshold in $step-threshold-map {
    @if ($i >= $prev-threshold and $i < $threshold) {
      $i: $i + $step;

      @return $i;
    }

    $prev-threshold: $threshold;
  }

  // should include max $threshold value but not dive into infinite loop. Thus +1 is used
  @return if($i < $prev-threshold, $prev-threshold, $prev-threshold + 1) ;
}

// Creates classes with .z-index-1 format
// We increment step by 1 until threshold is reached that we increment by $step
// Loop ends when $limit is reached
@mixin z-index($config) {
  $i: 0;
  $class-name: map_get($config, class-name);
  $step-threshold-map: map_get($config, step-threshold-map);
  $limit: map_get($config, limit);

  @while ($i <= $limit) {
    .#{$class-name}-#{$i} {
      z-index: $i;
    }

    $i: _process-counter($i, $step-threshold-map);
  }
}


@mixin borders($config) {
  $class-name: map_get($config, class-name);
  $thickness: map_get($config, thickness) or 1px;
  $color: map_get($config, color);
  $radius: map_get($config, radius);
  $border: #{$thickness} solid #{$color};

  .#{$class-name}-none {
    border: 0;
  }

  .#{$class-name}-rounded {
    border-radius: 50%;
  }

  .#{$class-name}-radius {
    border-radius: $radius;
  }

  @each $key, $value in $sides {
    @if ($key != empty) {
      .#{$class-name}-#{$key} {
        border-#{$value}: $border;
      }
    } @else {
      .#{$class-name} {
        border: $border;
      }
    }
  }
}

@mixin indents($config) {
  $mixin-class-name: map_get($config, class-name);
  $mixin-property-name: map_get($config, property-name);
  $limit: map_get($config, limit);
  $step-threshold-map: map_get($config, step-threshold-map);

  @each $key, $value in $sides {
    $i: 1;

    @while ($i <= $limit) {
      $class-name: '';
      $prop-name: '';
      $prop-value: '';

      @if ($key != empty) {
        $class-name: #{$mixin-class-name}-#{$key}-#{$i};
        $prop-name: #{$mixin-property-name}-#{$value};
        $prop-value: $i;
      } @else {
        $class-name: #{$mixin-class-name}-#{$i};
        $prop-name: $mixin-property-name;
        $prop-value: $i;
      }

      // positive
      .#{$class-name} {
        #{$prop-name}: #{$prop-value}px;
      }

      // negative
      // Don't construct negative values for padding
      @if ($prop-name != padding) {
        $class-name: #{$mixin-class-name}-#{$key}-n-#{$i};
        .#{$class-name} {
          #{$prop-name}: -#{$prop-value}px;
        }
      }

      @if ($key != empty) {
        .#{$mixin-class-name}-#{$key}-none {
          #{$mixin-property-name}-#{$value}: 0;
        }
      }

      $i: _process-counter($i, $step-threshold-map);
    }
  }

  .#{$mixin-class-name}-none {
    #{$mixin-property-name}: 0 !important;
  }
}

@mixin basic($config) {
  $background-class-name: map_get($config, background) or 'bg';
  $position-class-name: map_get($config, position) or 'pos';
  $text-class-name: map_get($config, text) or 'text';
  $font-class-name: map_get($config, font) or 'font';
  $line-height-class-name: map_get($config, line-height) or 'l-h';
  $overflow-class-name: map_get($config, overflow) or 'overflow';

  // backgrounds
  .#{$background-class-name}-white { background-color: white; }
  .#{$background-class-name}-transparent { background-color: transparent; }

  // positions
  .#{$position-class-name}-rlt { position: relative; }
  .#{$position-class-name}-stc { position: static; }
  .#{$position-class-name}-fix { position: fixed; }
  .#{$position-class-name}-abs { position: absolute; }
  .#{$position-class-name}-abs-full {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  // visibility
  .visibility-visible { visibility: visible; }
  .visibility-hidden { visibility: hidden; }

  // opacity
  .opacity-0 { opacity: 0; }
  .opacity-1 { opacity: 1; }

  // display
  .display-none { display: none; }
  .display-block { display: block; }
  .display-flex { display: flex; }

  // text
  .#{$text-class-name}-medium { font-size: medium; }
  .#{$text-class-name}-u-c { text-transform: uppercase; }
  .#{$text-class-name}-l-t { text-decoration: line-through; }
  .#{$text-class-name}-u-l { text-decoration: underline; }
  .#{$text-class-name}-ellipsis {
    display: block;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  // fonts
  .#{$font-class-name}-thin { font-weight: 300; }
  .#{$font-class-name}-normal { font-weight: 400; }
  .#{$font-class-name}-medium { font-weight: 500; }
  .#{$font-class-name}-bold { font-weight: 700; }
  .letter-spacing-default { letter-spacing: normal; }

  // transformations
  .h-full { height: 100%; }
  .w-full { width: 100%; }

  // user-actions / ui
  .select-none { user-select: none; }
  .select-initial { user-select: initial; }
  .cursor-pointer { cursor: pointer }
  .shadow-none { box-shadow: none; }
  .outline-none { outline: none; }
  .clear { clear: both; }

  // line-height
  .#{$line-height-class-name}-none { line-height: 0; }
  .#{$line-height-class-name}-normal { line-height: normal; }
  .#{$line-height-class-name}-1x { line-height: 1.2; }
  .#{$line-height-class-name}-2x { line-height: 2em; }

  // scrolls
  .scroll-x { overflow-x: auto; }
  .scroll-y { overflow-y: auto; }

  // overflow
  .#{$overflow-class-name}-visible { overflow: visible; }
  .#{$overflow-class-name}-x-hidden { overflow-x: hidden; }
  .#{$overflow-class-name}-y-hidden { overflow-y: hidden; }
  .#{$overflow-class-name}-hidden { overflow: hidden; }
}

@mixin bootstrap($config) {
  $z-index-config: map_get($config, z-index);
  $borders-config: map_get($config, border);
  $indents-config: map_get($config, indents);
  $basics-config: map_get($config, basics);

  @include z-index($z-index-config);
  @include borders($borders-config);
  @include basic($basics-config);

  @each $class-name, $property-name in map_get($indents-config, config) {
    @include indents((
      class-name: $class-name,
      property-name: $property-name,
      limit: map_get($indents-config, limit),
      step-threshold-map: map_get($indents-config, step-threshold-map)
    ));
  }
}
/* stylelint-enable */
